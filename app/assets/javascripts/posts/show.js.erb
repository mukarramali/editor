$(document).ready(function(){

  fingerprint = '';

  new Fingerprint2().get(function(result, components) {
    fingerprint = result;
  })

    // CREATING CODEMIRROR EDITOR
  cEditor = CodeMirror.fromTextArea(document.getElementById("post_area"), {
    mode: 'ruby',
    lineNumbers: true,
    lineWrapping: true,
    styleActiveLine: true,
    styleSelectedText: true,
    autoCloseBrackets: true,
    matchBrackets: true,
    foldGutter: true,
    lint: false,
    keyMap: 'sublime',
    gutters: ['CodeMirror-linenumbers', 'CodeMirror-foldgutter', 'CodeMirror-lint-markers'],
    extraKeys: {
      'Ctrl-Space': 'autocomplete',
      'Ctrl-Q': function(cm){ cm.foldCode(cm.getCursor()); }
    },
    theme: 'material',
    indentUnit: 2
  });

  cEditor.setValue($('#post_area').val());

  key_stroke_count = 0;

  cursorLine = 0;
  cursorColumn = 0;

  cEditor.on("keyup", function(cm, change) {
    key_stroke_count++;
    if(key_stroke_count>2){
      key_stroke_count=0;
      cursorLine = cEditor.getCursor().line;
      cursorColumn = cEditor.getCursor().ch;
      push();
    }
  });

  function push(){
    var post_id = $('#post_area').data("post-id");
    var content = cEditor.getValue();
    $.ajax({
    url: '/post_update',
    data: {
          'post' : content,
          'post_id' : post_id,
          'updated_by' : fingerprint
          },
      type: 'post',
      dataType: 'json',
      success: function(data){
        if(data['status'] != true)
          setTimeout(function(){push()}, 5000);
      },
      error: function(xhr, status, error) {
        var err = JSON.parse(xhr.responseText);
        console.log(err.Message);
        setTimeout(function(){push()}, 5000);
      }
    });
  }

  App.posts = App.cable.subscriptions.create("PostsChannel", {
    connected: function() {
      return setTimeout((function(_this) {
        return function() {
          // console.log("connected");
          _this.followCurrentPost();
          return _this.installPageChangeCallback();
        };
      })(this), 1000);
    },
    received: function(data) {
          // console.log("received");
      if(fingerprint != data.post.updated_by){
          // console.log("updating");
        cEditor.setValue(data.post.content);
        cEditor.setCursor({line: cursorLine, ch: cursorColumn});
      }
      return;
    },
    followCurrentPost: function() {
      var postId;
      // console.log("following");

      if (postId = $('#post_area').data('post-id')) {
        return this.perform('follow_post', {
          post_id: postId
        });
      } else {
        return this.perform('unfollow_post');
      }
    },
    installPageChangeCallback: function() {
      if (!this.installedPageChangeCallback) {
        this.installedPageChangeCallback = true;
        return $(document).on('turbolinks:load', function() {
          return App.posts.followCurrentPost();
        });
      }
    }
  });

});